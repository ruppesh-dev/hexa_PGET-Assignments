use TechShop
go

1--Write an SQL query to retrieve a list of all orders along with customer information (e.g., customer name) for each order.
select o.orderId , c.customerid,  o.orderdate , o.totalamount , c.firstname , c.lastname, c.email, c.phone, c.address, c.numberoforders
from dbo.Customers c
join
dbo.Orders o
on c.CustomerID=o.OrderID

2--Write an SQL query to find the total revenue generated by each electronic gadget product. Include the product name and the total revenue.
 select p.productname ,sum(od.quantity * p.price) as total_revenue
 from dbo.products p
 left join
 dbo. orderdetails od
 on p.productid =od.productid
 group by p.productname

3-- Write an SQL query to list all customers who have made at least one purchase. Include their names and contact information.select c.firstname, c.lastname, c.email,c.phone,c.numberoforders as following_customers_made_atleast_one_order
from dbo.customers c
where c.NumberOfOrders >= 1
 


 4--Write an SQL query to find the most popular electronic gadget, which is the one with the highest total quantity ordered. Include the product name and the total quantity ordered.
 select p.productname ,sum(od.quantity) as total_quantity
 from dbo.Products p
  full join
 dbo.orderdetails od
 on p.productid=od.productid
 group by ProductName 
 order by total_quantity desc

 --5. Write an SQL query to retrieve a list of electronic gadgets along with their corresponding categories.
alter table products
add Categories varchar(20)
update products 
set Categories ='E-Gadgets'
select productname ,Categories
from Products
GROUP BY Categories, ProductName

6.--Write an SQL query to calculate the average order value for each customer. Include the customer's name and their average order value.

select c.firstname, c.lastname, avg (o.TotalAmount) as Average_order_value
from dbo.Customers c
join
dbo.orders o
on c.CustomerID=o.CustomerID
group by c.FirstName, c.LastName

--7. Write an SQL query to find the order with the highest total revenue. Include the order ID, customer information, and the total revenue
 select p.productname ,o.OrderID,c.firstname,c.lastname,c.phone,sum(od.quantity * p.price) as total_revenue
 from dbo.products p
 join
 dbo.OrderDetails od
 on p.ProductID=od.ProductID
 join
 dbo.orders o
 on o.OrderID = od.OrderID
 join 
 dbo.Customers c
 on c.CustomerID=o.CustomerID
 group by p.ProductName,o.OrderID,c.FirstName,c.LastName,c.Phone
 order by total_revenue desc

 --8. Write an SQL query to list electronic gadgets and the number of times each product has been ordered.
 select p.productname ,count(od.orderid) as 'number of times ordered'
 from dbo.products p
 join
 dbo.orderdetails od
 on p.ProductID=od.ProductID
 group by p.ProductName
 order by 'number of times ordered' desc

 --9. Write an SQL query to find customers who have purchased a specific electronic gadget product. Allow users to input the product name as a parameter
 declare @productname varchar(50)='nokia A series'
 select c.firstname,c.lastname, c.email,c.phone
 from dbo.Customers c
 join
 dbo.orders o
 on c.CustomerID=o.CustomerID
 join 
 dbo.orderdetails od
 on od.OrderID=o.OrderID
 join 
 dbo.products p
 on p.ProductID=od.ProductID
 where p.productname=@productname

 --10. Write an SQL query to calculate the total revenue generated by all orders placed within a specific time period. Allow users to input the start and end dates as parameters.
 declare @startdate date ='2024-03-02'
 declare @enddate date ='2024-03-10'

  select p.productname ,sum(od.quantity * p.price) as total_revenue
 from dbo.products p
 join
 dbo. orderdetails od
 on p.productid =od.productid
 join 
 dbo.orders o
 on o.OrderID=od.OrderID
where o.orderdate between @startdate and @enddate
group by p.productname
